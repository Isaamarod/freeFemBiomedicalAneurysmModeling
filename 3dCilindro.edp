load "msh3" load "medit"

border aaa (t=0,30) {x=t;y=0;};
border bbb (t=0,2) {x=30;y=t;};
border ccc (t=0,30) {x=30-t;y=2;};
border ddd (t=0,2) {x=0;y=2-t;};
func bord = aaa(60) + bbb(40)+ ccc(40) + ddd (60);
//plot(bord); 

mesh Th2=buildmesh(bord);
plot(Th2,wait=1);

int[int] l23=[0,0,1,1]; 
mesh3 Th=buildlayers(Th2,coef= 1, 50 ,zbound=[0,2*pi]
   ,transfo=[x,y*cos(z),y*sin(z)],facemerge=1,labelmid=l23);
   
macro Grad(u) [dx(u),dy(u),dz(u)] //
fespace Vh(Th,P1);  Vh u,v;
solve Poisson(u,v) = int3d(Th)( Grad(u)'*Grad(v) ) - int3d(Th)( v) + on(1,u=1);
plot(u,wait=1,nbiso=20,value=1);
medit("u",Th,u,wait=1);


//Espacios de elementos finitos que verifiquen las condiciones inf-sup
fespace Vh(Th, P1b), Qh(Th, P1);//Creados dos espacios uno para la velocidad y otro para la presion. Vimos tipos de pares que verificaban la condición de inf-sup
Vh u1nmas1, u2nmas1, u3nmas1, u1n, u2n, u3n; //Incognitas velocidad
Qh pnmas1; //Incognitas presion
Vh v1, v2, v3;//Funciones test velocidad
Qh q;	//Funcion test presión
Vh f1, f2, f3, g1, g2, g3, u10, u20, u30;//Datos

real mu,k;
mu=1; k=0.01;

problem NS ([u1nmas1, u2nmas1, u3nmas1, pnmas1], [v1, v2, v3, q]) =
	int3d(Th)(u1nmas1*v1+u2nmas1*v2+u3nmas1*v3)
	+ int3d(Th)(mu*k*(dx(u1nmas1)*dx(v1)+dy(u1nmas1)*dy(v1)+dz(u1nmas1)*dz(v1))
	+dx(u2nmas1)*dx(v2)+dy(u2nmas1)*dy(v2)+dz(u2nmas1)*dz(v2)
	+dx(u3nmas1)*dx(v3)+dy(u3nmas1)*dy(v3)+dz(u3nmas1)*dz(v3))
	+int3d(Th)(u1n*dx(u1nmas1)*v1+u2n*dy(u1nmas1)*v1+u3n*dz(u1nmas1)*v1
				+u1n*dx(u2nmas1)*v2+u2n*dy(u2nmas1)*v2+u3n*dz(u2nmas1)*v2
				+u1n*dx(u3nmas1)*v3+u2n*dy(u3nmas1)*v3+u3n*dz(u3nmas1)*v3)
	-int3d(Th) (k*(pnmas1*(dx(v1)+dy(v2)+dz(v3))))
	-int3d(Th)(1e-10*pnmas1*q) //para matrices no simétricas
	-int3d(Th) (k*(f1*v1+f2*v2+f3*v3))
	+int3d (Th) (q*(dx(u1nmas1)+dy(u2nmas1)+dz(u3nmas1)))
	+on(1,3, u1nmas1=g1, u2nmas1=g2, u3nmas1=g3) + on (2,4, u1nmas1=u10, u2nmas1=u20, u3nmas1=u30);

//Definición de la condicion inicial:
u10=0.135*(1+sin(2*pi*0.125));
u20=0;
u30=0;
//Definicion condicion de contorno;
g1=0;
g2=0;
g3=0;
//Asignación a u1n , u2n y u3n:
u1n=u10;
u2n=u20;
u3n=u30;

real t1=0;
real T=1;
for (int m; m< T/k; m++){
t1=t1+k;
f1=0;
f2=0;
f3=9.8;

NS;

plot(coef=1.5,[u1nmas1, u2nmas1,u3nmas1], wait=1);
plot(pnmas1, wait=1);

u1n=u1nmas1;
u2n=u2nmas1;
u3n=u3nmas1;
};