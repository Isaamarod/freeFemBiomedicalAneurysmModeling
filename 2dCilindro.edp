load "msh3" load "medit"

border aaa (t=0,30) {x=t;y=2;};
border bbb (t=0,5) {x=30;y=2+t;};
border ccc (t=0,30) {x=30-t;y=7;};
border ddd (t=0,5) {x=0;y=7-t;};
func bord = aaa(60) + bbb(40)+ ccc(40) + ddd (60);

//plot(bord); 

mesh Th=buildmesh(bord);
plot(Th,wait=1);

//Espacios de elementos finitos que verifiquen las condiciones inf-sup
fespace Vh(Th, P2), Qh(Th, P1);//Creados dos espacios uno para la velocidad y otro para la presion. Vimos tipos de pares que verificaban la condición de inf-sup
Vh u1nmas1, u2nmas1, u1n, u2n; //Incognitas velocidad
Qh pnmas1; //Incognitas presion
Vh v1, v2;//Funciones test velocidad
Qh q;	//Funcion test presión
Vh f1, f2, g1, g2, u10, u20;//Datos

real mu,k;
mu=1; k=0.01;

problem NS ([u1nmas1, u2nmas1, pnmas1], [v1, v2, q]) =
	int2d(Th)(u1nmas1*v1+u2nmas1*v2)
	+ int2d(Th)(mu*k*(dx(u1nmas1)*dx(v1)+dy(u1nmas1)*dy(v1))
	+dx(u2nmas1)*dx(v2)+dy(u2nmas1)*dy(v2))
	+int2d(Th)(u1n*dx(u1nmas1)*v1+u2n*dy(u1nmas1)*v1
				+u1n*dx(u2nmas1)*v2+u2n*dy(u2nmas1)*v2)
	-int2d(Th) (k*(pnmas1*(dx(v1)+dy(v2))))
	-int2d(Th)(1e-10*pnmas1*q) //para matrices no simétricas
	-int2d(Th) (k*(f1*v1+f2*v2))
	+int2d (Th) (q*(dx(u1nmas1)+dy(u2nmas1)))
	+on(1,3, u1nmas1=g1, u2nmas1=g2) + on (2,4, u1nmas1=u10, u2nmas1=u20);

//Definición de la condicion inicial:
u10=0.135*(1+sin(2*pi*0.125));
u20=0;
//Definicion condicion de contorno;
g1=0;
g2=0;
//Asignación a u1n y u2n:
u1n=u10;
u2n=u20;

real t=0;
real T=1;

for (int m; m< T/k; m++)
{
t=t+k;
f1=0;
f2=9.8;
NS;
plot(coef=1.5,[u1nmas1, u2nmas1], wait=1);
plot(pnmas1, wait=1);
u1n=u1nmas1;
u2n=u2nmas1;
};

